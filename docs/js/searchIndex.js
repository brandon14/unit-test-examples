Search.appendIndex(
    [
                {
            "fqsen": "\\App\\Contracts\\Services\\CacheException",
            "name": "CacheException",
            "summary": "Class\u0020CacheException.",
            "url": "classes/App-Contracts-Services-CacheException.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\CacheException\u003A\u003AcreateForTimestampSaveFailure\u0028\u0029",
            "name": "createForTimestampSaveFailure",
            "summary": "Creates\u0020a\u0020new\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D\u0020instance\u0020for\u0020a\ncache\u0020save\u0020failure\u0020when\u0020saving\u0020a\u0020timestamp\u0020to\u0020cache.",
            "url": "classes/App-Contracts-Services-CacheException.html#method_createForTimestampSaveFailure"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\CacheException\u003A\u003AcreateForStatusSaveFailure\u0028\u0029",
            "name": "createForStatusSaveFailure",
            "summary": "Creates\u0020a\u0020new\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D\u0020instance\u0020for\u0020a\ncache\u0020save\u0020failure\u0020when\u0020tryign\u0020to\u0020save\u0020a\u0020status\u0020array\u0020in\u0020the\u0020cache.",
            "url": "classes/App-Contracts-Services-CacheException.html#method_createForStatusSaveFailure"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\CacheException\u003A\u003AcreateFromException\u0028\u0029",
            "name": "createFromException",
            "summary": "Creates\u0020a\u0020new\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D\u0020from\u0020an\nexisting\u0020\u007B\u0040link\u0020\\Throwable\u007D.",
            "url": "classes/App-Contracts-Services-CacheException.html#method_createFromException"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\CacheImplementationNeededException",
            "name": "CacheImplementationNeededException",
            "summary": "Class\u0020CacheImplementationNeededException.",
            "url": "classes/App-Contracts-Services-CacheImplementationNeededException.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\CacheImplementationNeededException\u003A\u003AcacheImplementationNeeded\u0028\u0029",
            "name": "cacheImplementationNeeded",
            "summary": "Creates\u0020a\u0020new\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheImplementationNeededException\u007D\u0020instance.",
            "url": "classes/App-Contracts-Services-CacheImplementationNeededException.html#method_cacheImplementationNeeded"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\InvalidDateFormatException",
            "name": "InvalidDateFormatException",
            "summary": "Class\u0020InvalidDateFormatException.",
            "url": "classes/App-Contracts-Services-InvalidDateFormatException.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\InvalidDateFormatException\u003A\u003AinvalidFormat\u0028\u0029",
            "name": "invalidFormat",
            "summary": "Creates\u0020a\u0020new\u0020exception\u0020when\u0020an\u0020invlaid\u0020date\u0020format\u0020is\u0020encountered.",
            "url": "classes/App-Contracts-Services-InvalidDateFormatException.html#method_invalidFormat"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions",
            "name": "LastModifiedOptions",
            "summary": "Class\u0020LastModifiedOptions.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Constructs\u0020a\u0020new\u0020set\u0020of\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u007D\u0020options.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#method___construct"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003A\u0024isCacheEnabled",
            "name": "isCacheEnabled",
            "summary": "Whether\u0020to\u0020cache\u0020the\u0020timestamp\u0020or\u0020not.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#property_isCacheEnabled"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003AgetCacheTtl\u0028\u0029",
            "name": "getCacheTtl",
            "summary": "Get\u0020cache\u0020TTL\u0020option.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#method_getCacheTtl"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003AgetCacheKey\u0028\u0029",
            "name": "getCacheKey",
            "summary": "Get\u0020cache\u0020key\u0020option.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#method_getCacheKey"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003AgetTimestampFormat\u0028\u0029",
            "name": "getTimestampFormat",
            "summary": "Get\u0020timestamp\u0020format\u0020option.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#method_getTimestampFormat"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003A\u0024cacheTtl",
            "name": "cacheTtl",
            "summary": "How\u0020long\u0020to\u0020cache\u0020the\u0020last\u0020modified\u0020timestamp\u0020for.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#property_cacheTtl"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003A\u0024cacheKey",
            "name": "cacheKey",
            "summary": "Cache\u0020key.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#property_cacheKey"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u003A\u003A\u0024timestampFormat",
            "name": "timestampFormat",
            "summary": "Default\u0020timestamp\u0020format.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedOptions.html#property_timestampFormat"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService",
            "name": "LastModifiedService",
            "summary": "Interface\u0020LastModifiedService.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u003A\u003AaddProvider\u0028\u0029",
            "name": "addProvider",
            "summary": "Adds\u0020a\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider\u007D\u0020to\u0020the\u0020service.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html#method_addProvider"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u003A\u003AremoveProvider\u0028\u0029",
            "name": "removeProvider",
            "summary": "Removes\u0020the\u0020named\u0020provider\u0020from\u0020the\u0020service.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html#method_removeProvider"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u003A\u003AgetProviders\u0028\u0029",
            "name": "getProviders",
            "summary": "Get\u0020array\u0020of\u0020providers\u0020registered.\u0020Returns\u0020an\u0020array\u0020of\n\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider\u007D.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html#method_getProviders"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u003A\u003AgetProviderNames\u0028\u0029",
            "name": "getProviderNames",
            "summary": "Get\u0020array\u0020of\u0020registered\u0020providers\u0020names.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html#method_getProviderNames"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u003A\u003AgetLastModifiedTime\u0028\u0029",
            "name": "getLastModifiedTime",
            "summary": "Gets\u0020the\u0020last\u0020modified\u0020time\u0020from\u0020a\u0020specific\u0020provider\u0020or\u0020if\u0020all\u0020is\u0020passed\u0020in,\u0020will\nresolve\u0020timestamp\u0020from\u0020all\u0020providers.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html#method_getLastModifiedTime"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u003A\u003AgetLastModifiedTimeByArray\u0028\u0029",
            "name": "getLastModifiedTimeByArray",
            "summary": "Gets\u0020the\u0020last\u0020modified\u0020time\u0020from\u0020an\u0020array\u0020of\u0020providers.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html#method_getLastModifiedTimeByArray"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedService\u003A\u003AgetDefaultTimestampFormat\u0028\u0029",
            "name": "getDefaultTimestampFormat",
            "summary": "Get\u0020the\u0020default\u0020timestamp\u0020format.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedService.html#method_getDefaultTimestampFormat"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider",
            "name": "LastModifiedTimeProvider",
            "summary": "Interface\u0020LastModifiedTimeProvider.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedTimeProvider.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider\u003A\u003AgetLastModifiedTime\u0028\u0029",
            "name": "getLastModifiedTime",
            "summary": "Gets\u0020the\u0020last\u0020modified\u0020time\u0020for\u0020the\u0020provider.",
            "url": "classes/App-Contracts-Services-LastModified-LastModifiedTimeProvider.html#method_getLastModifiedTime"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\ProviderRegistrationException",
            "name": "ProviderRegistrationException",
            "summary": "Class\u0020ProviderRegistrationException.",
            "url": "classes/App-Contracts-Services-ProviderRegistrationException.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\ProviderRegistrationException\u003A\u003AproviderAlreadyRegistered\u0028\u0029",
            "name": "providerAlreadyRegistered",
            "summary": "Creates\u0020a\u0020new\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020when\u0020a\u0020provider\nwith\u0020name\u0020\u007B\u0040link\u0020\u0024providerName\u007D\u0020is\u0020already\u0020registered.",
            "url": "classes/App-Contracts-Services-ProviderRegistrationException.html#method_providerAlreadyRegistered"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\ProviderRegistrationException\u003A\u003AnoProviderRegistered\u0028\u0029",
            "name": "noProviderRegistered",
            "summary": "Creates\u0020a\u0020new\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020for\u0020when\nno\u0020provider\u0020with\u0020\u007B\u0040link\u0020\u0024providerName\u007D\u0020is\u0020registered.",
            "url": "classes/App-Contracts-Services-ProviderRegistrationException.html#method_noProviderRegistered"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\ProviderRegistrationException\u003A\u003AnoProvidersSpecified\u0028\u0029",
            "name": "noProvidersSpecified",
            "summary": "Creates\u0020a\u0020new\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020for\nwhen\u0020no\u0020providers\u0020where\u0020specified.",
            "url": "classes/App-Contracts-Services-ProviderRegistrationException.html#method_noProvidersSpecified"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusOptions",
            "name": "StatusOptions",
            "summary": "Class\u0020StatusOptions.",
            "url": "classes/App-Contracts-Services-Status-StatusOptions.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusOptions\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Constructs\u0020a\u0020new\u0020set\u0020of\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\Status\\StatusService\u007D\u0020options.",
            "url": "classes/App-Contracts-Services-Status-StatusOptions.html#method___construct"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusOptions\u003A\u003A\u0024isCacheEnabled",
            "name": "isCacheEnabled",
            "summary": "Whether\u0020to\u0020cache\u0020the\u0020statuses\u0020or\u0020not.",
            "url": "classes/App-Contracts-Services-Status-StatusOptions.html#property_isCacheEnabled"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusOptions\u003A\u003AgetCacheTtl\u0028\u0029",
            "name": "getCacheTtl",
            "summary": "Get\u0020cache\u0020TTL\u0020option.",
            "url": "classes/App-Contracts-Services-Status-StatusOptions.html#method_getCacheTtl"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusOptions\u003A\u003AgetCacheKey\u0028\u0029",
            "name": "getCacheKey",
            "summary": "Get\u0020cache\u0020key\u0020option.",
            "url": "classes/App-Contracts-Services-Status-StatusOptions.html#method_getCacheKey"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusOptions\u003A\u003A\u0024cacheTtl",
            "name": "cacheTtl",
            "summary": "How\u0020long\u0020to\u0020cache\u0020the\u0020statuses\u0020for.",
            "url": "classes/App-Contracts-Services-Status-StatusOptions.html#property_cacheTtl"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusOptions\u003A\u003A\u0024cacheKey",
            "name": "cacheKey",
            "summary": "Cache\u0020key.",
            "url": "classes/App-Contracts-Services-Status-StatusOptions.html#property_cacheKey"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusService",
            "name": "StatusService",
            "summary": "Interface\u0020StatusService.",
            "url": "classes/App-Contracts-Services-Status-StatusService.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusService\u003A\u003AaddProvider\u0028\u0029",
            "name": "addProvider",
            "summary": "Adds\u0020a\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u007D\u0020to\u0020the\u0020service.",
            "url": "classes/App-Contracts-Services-Status-StatusService.html#method_addProvider"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusService\u003A\u003AremoveProvider\u0028\u0029",
            "name": "removeProvider",
            "summary": "Removes\u0020the\u0020named\u0020provider\u0020from\u0020the\u0020service.",
            "url": "classes/App-Contracts-Services-Status-StatusService.html#method_removeProvider"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusService\u003A\u003AgetProviders\u0028\u0029",
            "name": "getProviders",
            "summary": "Get\u0020array\u0020of\u0020providers\u0020registered.\u0020Returns\u0020an\u0020array\u0020of\n\u007B\u0040link\u0020\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u007D.",
            "url": "classes/App-Contracts-Services-Status-StatusService.html#method_getProviders"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusService\u003A\u003AgetProviderNames\u0028\u0029",
            "name": "getProviderNames",
            "summary": "Get\u0020array\u0020of\u0020registered\u0020providers\u0020names.",
            "url": "classes/App-Contracts-Services-Status-StatusService.html#method_getProviderNames"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusService\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020for\u0020a\u0020provider\u0020\u0028or\u0020all\u0020providers\u0020if\u0020string\u0020\u0027all\u0027\u0020or\u0020\u0020no\u0020param\u0020is\u0020passed\u0020in\u0029\u0020or\nlist\u0020of\u0020providers.",
            "url": "classes/App-Contracts-Services-Status-StatusService.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusService\u003A\u003AgetStatusByArray\u0028\u0029",
            "name": "getStatusByArray",
            "summary": "Get\u0020the\u0020status\u0020for\u0020an\u0020array\u0020of\u0020provider\u0020names.",
            "url": "classes/App-Contracts-Services-Status-StatusService.html#method_getStatusByArray"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusServiceProvider",
            "name": "StatusServiceProvider",
            "summary": "Interface\u0020StatusServiceProvider.",
            "url": "classes/App-Contracts-Services-Status-StatusServiceProvider.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020of\u0020the\u0020service.",
            "url": "classes/App-Contracts-Services-Status-StatusServiceProvider.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u003A\u003ASTATUS_OK",
            "name": "STATUS_OK",
            "summary": "Status\u0020string\u0020for\u0020a\u0020service\u0020that\u0020is\u0020okay.",
            "url": "classes/App-Contracts-Services-Status-StatusServiceProvider.html#constant_STATUS_OK"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u003A\u003ASTATUS_ERROR",
            "name": "STATUS_ERROR",
            "summary": "Status\u0020string\u0020for\u0020a\u0020service\u0020that\u0020is\u0020unreachable\u0020or\u0020otherwise\u0020in\u0020error\u0020status.",
            "url": "classes/App-Contracts-Services-Status-StatusServiceProvider.html#constant_STATUS_ERROR"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u003A\u003ASTATUS_DISABLED",
            "name": "STATUS_DISABLED",
            "summary": "Status\u0020string\u0020for\u0020a\u0020service\u0020that\u0020has\u0020been\u0020disabled.",
            "url": "classes/App-Contracts-Services-Status-StatusServiceProvider.html#constant_STATUS_DISABLED"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u003A\u003ASTATUS_UNKNOWN",
            "name": "STATUS_UNKNOWN",
            "summary": "Status\u0020for\u0020a\u0020unknown\u0020condition\u0020on\u0020the\u0020service.",
            "url": "classes/App-Contracts-Services-Status-StatusServiceProvider.html#constant_STATUS_UNKNOWN"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified",
            "name": "LastModified",
            "summary": "Class\u0020LastModified.",
            "url": "classes/App-Services-LastModified-LastModified.html"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Constructs\u0020a\u0020LastModified\u0020service\u0020object.",
            "url": "classes/App-Services-LastModified-LastModified.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AaddProvider\u0028\u0029",
            "name": "addProvider",
            "summary": "Adds\u0020a\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider\u007D\u0020to\u0020the\u0020service.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_addProvider"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AremoveProvider\u0028\u0029",
            "name": "removeProvider",
            "summary": "Removes\u0020the\u0020named\u0020provider\u0020from\u0020the\u0020service.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_removeProvider"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AgetProviders\u0028\u0029",
            "name": "getProviders",
            "summary": "Get\u0020array\u0020of\u0020providers\u0020registered.\u0020Returns\u0020an\u0020array\u0020of\n\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider\u007D.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_getProviders"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AgetProviderNames\u0028\u0029",
            "name": "getProviderNames",
            "summary": "Get\u0020array\u0020of\u0020registered\u0020providers\u0020names.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_getProviderNames"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AgetLastModifiedTime\u0028\u0029",
            "name": "getLastModifiedTime",
            "summary": "Gets\u0020the\u0020last\u0020modified\u0020time\u0020from\u0020a\u0020specific\u0020provider\u0020or\u0020if\u0020all\u0020is\u0020passed\u0020in,\u0020will\nresolve\u0020timestamp\u0020from\u0020all\u0020providers.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_getLastModifiedTime"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AgetLastModifiedTimeByArray\u0028\u0029",
            "name": "getLastModifiedTimeByArray",
            "summary": "Gets\u0020the\u0020last\u0020modified\u0020time\u0020from\u0020an\u0020array\u0020of\u0020providers.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_getLastModifiedTimeByArray"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AgetDefaultTimestampFormat\u0028\u0029",
            "name": "getDefaultTimestampFormat",
            "summary": "Get\u0020the\u0020default\u0020timestamp\u0020format.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_getDefaultTimestampFormat"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AresolveProviderArray\u0028\u0029",
            "name": "resolveProviderArray",
            "summary": "Get\u0020last\u0020modified\u0020timestamp\u0020for\u0020an\u0020array\u0020of\u0020providers.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_resolveProviderArray"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AresolveProviderTimestamps\u0028\u0029",
            "name": "resolveProviderTimestamps",
            "summary": "Resolve\u0020latest\u0020timestamp\u0020from\u0020an\u0020array\u0020of\u0020provider\u0020names.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_resolveProviderTimestamps"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AresolveTimestamp\u0028\u0029",
            "name": "resolveTimestamp",
            "summary": "Resolve\u0020timestamp\u0020for\u0020a\u0020specific\u0020provider.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_resolveTimestamp"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AcheckCache\u0028\u0029",
            "name": "checkCache",
            "summary": "Check\u0020the\u0020cache\u0020for\u0020the\u0020given\u0020key\u0020and\u0020return\u0020it\u0020iff\u0020it\u0020exists,\u0020otherwise\u0020return\u0020null.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_checkCache"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003AsaveInCache\u0028\u0029",
            "name": "saveInCache",
            "summary": "Saves\u0020timestamp\u0020in\u0020cache.",
            "url": "classes/App-Services-LastModified-LastModified.html#method_saveInCache"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003A\u0024cache",
            "name": "cache",
            "summary": "Application\u0020cache\u0020store.",
            "url": "classes/App-Services-LastModified-LastModified.html#property_cache"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003A\u0024isCacheEnabled",
            "name": "isCacheEnabled",
            "summary": "Whether\u0020to\u0020cache\u0020the\u0020timestamp\u0020or\u0020not.",
            "url": "classes/App-Services-LastModified-LastModified.html#property_isCacheEnabled"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003A\u0024cacheTtl",
            "name": "cacheTtl",
            "summary": "How\u0020long\u0020to\u0020cache\u0020the\u0020last\u0020modified\u0020timestamp\u0020for.",
            "url": "classes/App-Services-LastModified-LastModified.html#property_cacheTtl"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003A\u0024cacheKey",
            "name": "cacheKey",
            "summary": "Cache\u0020key.",
            "url": "classes/App-Services-LastModified-LastModified.html#property_cacheKey"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003A\u0024timestampFormat",
            "name": "timestampFormat",
            "summary": "Timestamp\u0020format.",
            "url": "classes/App-Services-LastModified-LastModified.html#property_timestampFormat"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\LastModified\u003A\u003A\u0024providers",
            "name": "providers",
            "summary": "Associative\u0020array\u0020of\u0020\u0027name\u0027\u0020\u003D\u003E\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider\u007D.",
            "url": "classes/App-Services-LastModified-LastModified.html#property_providers"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProvider",
            "name": "CacheLastModifiedTimeProvider",
            "summary": "Class\u0020CacheLastModifiedTimeProvider.",
            "url": "classes/App-Services-LastModified-Providers-CacheLastModifiedTimeProvider.html"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProvider\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Constructs\u0020a\u0020cache\u0020based\u0020last\u0020modified\u0020provider.",
            "url": "classes/App-Services-LastModified-Providers-CacheLastModifiedTimeProvider.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProvider\u003A\u003AgetLastModifiedTime\u0028\u0029",
            "name": "getLastModifiedTime",
            "summary": "Gets\u0020the\u0020last\u0020modified\u0020time\u0020for\u0020the\u0020provider.",
            "url": "classes/App-Services-LastModified-Providers-CacheLastModifiedTimeProvider.html#method_getLastModifiedTime"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProvider\u003A\u003A\u0024cache",
            "name": "cache",
            "summary": "PSR\u0020cache\u0020implementation.",
            "url": "classes/App-Services-LastModified-Providers-CacheLastModifiedTimeProvider.html#property_cache"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProvider\u003A\u003A\u0024cacheKey",
            "name": "cacheKey",
            "summary": "Cache\u0020key.",
            "url": "classes/App-Services-LastModified-Providers-CacheLastModifiedTimeProvider.html#property_cacheKey"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\FilesystemLastModifiedTimeProvider",
            "name": "FilesystemLastModifiedTimeProvider",
            "summary": "Class\u0020FilesystemLastModifiedTimeProvider.",
            "url": "classes/App-Services-LastModified-Providers-FilesystemLastModifiedTimeProvider.html"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\FilesystemLastModifiedTimeProvider\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Constructs\u0020filesystem\u0020last\u0020modified\u0020provider.",
            "url": "classes/App-Services-LastModified-Providers-FilesystemLastModifiedTimeProvider.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\FilesystemLastModifiedTimeProvider\u003A\u003AgetLastModifiedTime\u0028\u0029",
            "name": "getLastModifiedTime",
            "summary": "Gets\u0020the\u0020last\u0020modified\u0020time\u0020for\u0020the\u0020provider.",
            "url": "classes/App-Services-LastModified-Providers-FilesystemLastModifiedTimeProvider.html#method_getLastModifiedTime"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\FilesystemLastModifiedTimeProvider\u003A\u003AfindLastModifiedFileTime\u0028\u0029",
            "name": "findLastModifiedFileTime",
            "summary": "Function\u0020to\u0020iterate\u0020over\u0020an\u0020array\u0020of\u0020files\/directories\u0020and\u0020return\nthe\u0020greatest\u0020file\u0020modified\u0020time.",
            "url": "classes/App-Services-LastModified-Providers-FilesystemLastModifiedTimeProvider.html#method_findLastModifiedFileTime"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\FilesystemLastModifiedTimeProvider\u003A\u003A\u0024basePath",
            "name": "basePath",
            "summary": "Base\u0020path\u0020to\u0020start\u0020the\u0020file\u0020traversal.",
            "url": "classes/App-Services-LastModified-Providers-FilesystemLastModifiedTimeProvider.html#property_basePath"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers\\FilesystemLastModifiedTimeProvider\u003A\u003A\u0024includedDirectories",
            "name": "includedDirectories",
            "summary": "List\u0020of\u0020directories\u0020to\u0020traverse\u0020to\u0020determine\u0020last\u0020modified\u0020file\u0020time.",
            "url": "classes/App-Services-LastModified-Providers-FilesystemLastModifiedTimeProvider.html#property_includedDirectories"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\OpcacheProvider",
            "name": "OpcacheProvider",
            "summary": "Class\u0020OpcacheProvider.",
            "url": "classes/App-Services-Status-Providers-OpcacheProvider.html"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\OpcacheProvider\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020of\u0020the\u0020service.",
            "url": "classes/App-Services-Status-Providers-OpcacheProvider.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PdoProvider",
            "name": "PdoProvider",
            "summary": "Class\u0020PdoProvider.",
            "url": "classes/App-Services-Status-Providers-PdoProvider.html"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PdoProvider\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Constructs\u0020a\u0020new\u0020database\u0020status\u0020service\u0020provider.",
            "url": "classes/App-Services-Status-Providers-PdoProvider.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PdoProvider\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020of\u0020the\u0020service.",
            "url": "classes/App-Services-Status-Providers-PdoProvider.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PdoProvider\u003A\u003A\u0024db",
            "name": "db",
            "summary": "PDO\u0020connection\u0020instance.\u0020We\u0020use\u0020PDO\u0020here\u0020to\u0020decouple\u0020this\u0020provider\u0020from\u0020any\u00203rd\u0020party\nlibrary.",
            "url": "classes/App-Services-Status-Providers-PdoProvider.html#property_db"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PhpRedisProvider",
            "name": "PhpRedisProvider",
            "summary": "Class\u0020PhpRedisProvider.",
            "url": "classes/App-Services-Status-Providers-PhpRedisProvider.html"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PhpRedisProvider\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Construct\u0020a\u0020new\u0020PHP\u0020redis\u0020status\u0020provider.",
            "url": "classes/App-Services-Status-Providers-PhpRedisProvider.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PhpRedisProvider\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020of\u0020the\u0020service.",
            "url": "classes/App-Services-Status-Providers-PhpRedisProvider.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PhpRedisProvider\u003A\u003A\u0024redis",
            "name": "redis",
            "summary": "Redis\u0020client\u0020instance.",
            "url": "classes/App-Services-Status-Providers-PhpRedisProvider.html#property_redis"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PredisProvider",
            "name": "PredisProvider",
            "summary": "Class\u0020PredisProvider.",
            "url": "classes/App-Services-Status-Providers-PredisProvider.html"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PredisProvider\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Construct\u0020a\u0020new\u0020predis\u0020status\u0020provider.",
            "url": "classes/App-Services-Status-Providers-PredisProvider.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PredisProvider\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020of\u0020the\u0020service.",
            "url": "classes/App-Services-Status-Providers-PredisProvider.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\PredisProvider\u003A\u003A\u0024redis",
            "name": "redis",
            "summary": "Predis\u0020client\u0020instance.",
            "url": "classes/App-Services-Status-Providers-PredisProvider.html#property_redis"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\WebsiteProvider",
            "name": "WebsiteProvider",
            "summary": "Class\u0020WebsiteProvider.",
            "url": "classes/App-Services-Status-Providers-WebsiteProvider.html"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\WebsiteProvider\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Construct\u0020a\u0020new\u0020website\u0020status\u0020provider.",
            "url": "classes/App-Services-Status-Providers-WebsiteProvider.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\WebsiteProvider\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020of\u0020the\u0020service.",
            "url": "classes/App-Services-Status-Providers-WebsiteProvider.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\WebsiteProvider\u003A\u003A\u0024httpClient",
            "name": "httpClient",
            "summary": "PSR\u0020HTTP\u0020client.",
            "url": "classes/App-Services-Status-Providers-WebsiteProvider.html#property_httpClient"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\WebsiteProvider\u003A\u003A\u0024requestFactory",
            "name": "requestFactory",
            "summary": "PSR\u0020HTTP\u0020request\u0020factory.",
            "url": "classes/App-Services-Status-Providers-WebsiteProvider.html#property_requestFactory"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers\\WebsiteProvider\u003A\u003A\u0024routeToPing",
            "name": "routeToPing",
            "summary": "Route\u0020to\u0020hit\u0020to\u0020check\u0020website\u0020status.",
            "url": "classes/App-Services-Status-Providers-WebsiteProvider.html#property_routeToPing"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService",
            "name": "StatusService",
            "summary": "Class\u0020StatusService.",
            "url": "classes/App-Services-Status-StatusService.html"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "Construct\u0020a\u0020new\u0020status\u0020service.",
            "url": "classes/App-Services-Status-StatusService.html#method___construct"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AaddProvider\u0028\u0029",
            "name": "addProvider",
            "summary": "Adds\u0020a\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u007D\u0020to\u0020the\u0020service.",
            "url": "classes/App-Services-Status-StatusService.html#method_addProvider"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AremoveProvider\u0028\u0029",
            "name": "removeProvider",
            "summary": "Removes\u0020the\u0020named\u0020provider\u0020from\u0020the\u0020service.",
            "url": "classes/App-Services-Status-StatusService.html#method_removeProvider"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AgetProviders\u0028\u0029",
            "name": "getProviders",
            "summary": "Get\u0020array\u0020of\u0020providers\u0020registered.\u0020Returns\u0020an\u0020array\u0020of\n\u007B\u0040link\u0020\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u007D.",
            "url": "classes/App-Services-Status-StatusService.html#method_getProviders"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AgetProviderNames\u0028\u0029",
            "name": "getProviderNames",
            "summary": "Get\u0020array\u0020of\u0020registered\u0020providers\u0020names.",
            "url": "classes/App-Services-Status-StatusService.html#method_getProviderNames"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AgetStatus\u0028\u0029",
            "name": "getStatus",
            "summary": "Get\u0020the\u0020status\u0020for\u0020a\u0020provider\u0020\u0028or\u0020all\u0020providers\u0020if\u0020string\u0020\u0027all\u0027\u0020or\u0020\u0020no\u0020param\u0020is\u0020passed\u0020in\u0029\u0020or\nlist\u0020of\u0020providers.",
            "url": "classes/App-Services-Status-StatusService.html#method_getStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AgetStatusByArray\u0028\u0029",
            "name": "getStatusByArray",
            "summary": "Get\u0020the\u0020status\u0020for\u0020an\u0020array\u0020of\u0020provider\u0020names.",
            "url": "classes/App-Services-Status-StatusService.html#method_getStatusByArray"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AresolveProviderArray\u0028\u0029",
            "name": "resolveProviderArray",
            "summary": "Resolve\u0020statuses\u0020of\u0020an\u0020array\u0020of\u0020provider\u0020names.",
            "url": "classes/App-Services-Status-StatusService.html#method_resolveProviderArray"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AresolveStatus\u0028\u0029",
            "name": "resolveStatus",
            "summary": "Resolves\u0020a\u0020status\u0020for\u0020a\u0020specific\u0020provider.",
            "url": "classes/App-Services-Status-StatusService.html#method_resolveStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AcheckCache\u0028\u0029",
            "name": "checkCache",
            "summary": "Check\u0020the\u0020cache\u0020for\u0020the\u0020given\u0020key\u0020and\u0020return\u0020it\u0020if\u0020it\u0020exists,\u0020otherwise\u0020return\u0020null.",
            "url": "classes/App-Services-Status-StatusService.html#method_checkCache"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AresolveCachedStatus\u0028\u0029",
            "name": "resolveCachedStatus",
            "summary": "Resolve\u0020cached\u0020status\u0020from\u0020cache.\u0020If\u0020no\u0020cache\u0020entry\u0020is\u0020found\u0020or\u0020cannot\u0020be\u0020resolve,\u0020null\u0020will\nbe\u0020returned.",
            "url": "classes/App-Services-Status-StatusService.html#method_resolveCachedStatus"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003AsaveInCache\u0028\u0029",
            "name": "saveInCache",
            "summary": "Saves\u0020status\u0020in\u0020cache.",
            "url": "classes/App-Services-Status-StatusService.html#method_saveInCache"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003A\u0024cache",
            "name": "cache",
            "summary": "Application\u0020cache\u0020store.",
            "url": "classes/App-Services-Status-StatusService.html#property_cache"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003A\u0024isCacheEnabled",
            "name": "isCacheEnabled",
            "summary": "Whether\u0020to\u0020cache\u0020statuses\u0020as\u0020they\u0020are\u0020obtained.",
            "url": "classes/App-Services-Status-StatusService.html#property_isCacheEnabled"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003A\u0024cacheTtl",
            "name": "cacheTtl",
            "summary": "How\u0020long\u0020to\u0020cache\u0020the\u0020status\u0020for.",
            "url": "classes/App-Services-Status-StatusService.html#property_cacheTtl"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003A\u0024cacheKey",
            "name": "cacheKey",
            "summary": "Cache\u0020key.",
            "url": "classes/App-Services-Status-StatusService.html#property_cacheKey"
        },                {
            "fqsen": "\\App\\Services\\Status\\StatusService\u003A\u003A\u0024providers",
            "name": "providers",
            "summary": "Associative\u0020array\u0020of\u0020\u0027name\u0027\u0020\u003D\u003E\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u007D.",
            "url": "classes/App-Services-Status-StatusService.html#property_providers"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedOptionsTest",
            "name": "LastModifiedOptionsTest",
            "summary": "Class\u0020LastModifiedOptionsTest.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedOptionsTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedOptionsTest\u003A\u003AtestThrowsInvalidArgumentExceptionWhenInvalidDateFormatIsProvided\u0028\u0029",
            "name": "testThrowsInvalidArgumentExceptionWhenInvalidDateFormatIsProvided",
            "summary": "Test\u0020that\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u007D\u0020validates\u0020a\u0020valid\ntimestamp\u0020format\u0020has\u0020been\u0020provided.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedOptionsTest.html#method_testThrowsInvalidArgumentExceptionWhenInvalidDateFormatIsProvided"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedOptionsTest\u003A\u003AtestDoesNotThrowsInvalidArgumentExceptionWhenValidDateFormatIsProvided\u0028\u0029",
            "name": "testDoesNotThrowsInvalidArgumentExceptionWhenValidDateFormatIsProvided",
            "summary": "Test\u0020that\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u007D\u0020validates\u0020a\u0020valid\ntimestamp\u0020format\u0020has\u0020been\u0020provided.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedOptionsTest.html#method_testDoesNotThrowsInvalidArgumentExceptionWhenValidDateFormatIsProvided"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest",
            "name": "LastModifiedTest",
            "summary": "Class\u0020LastModifiedTest.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AsetUp\u0028\u0029",
            "name": "setUp",
            "summary": "Set\u0020up\u0020LastModified\u0020service\u0020test.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_setUp"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AgetConfig\u0028\u0029",
            "name": "getConfig",
            "summary": "Returns\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedOptions\u007D\u0020instance.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_getConfig"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestReturnsDefaultTimestampFormat\u0028\u0029",
            "name": "testReturnsDefaultTimestampFormat",
            "summary": "Simple\u0020test\u0020to\u0020hit\u0020the\u0020\u0060getDefaultTimestampFormat\u0060\u0020function.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testReturnsDefaultTimestampFormat"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestReturnsProviders\u0028\u0029",
            "name": "testReturnsProviders",
            "summary": "Test\u0020that\u0020service\u0020can\u0020return\u0020a\u0020list\u0020of\u0020registered\u0020providers.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testReturnsProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestReturnsProviderNames\u0028\u0029",
            "name": "testReturnsProviderNames",
            "summary": "Test\u0020that\u0020service\u0020can\u0020return\u0020a\u0020list\u0020of\u0020registered\u0020provider\u0020names.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testReturnsProviderNames"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestFiltersInvalidProvidersFromArrayUponConstruction\u0028\u0029",
            "name": "testFiltersInvalidProvidersFromArrayUponConstruction",
            "summary": "Test\u0020that\u0020service\u0020properly\u0020filters\u0020out\u0020invalid\u0020providers\u0020when\u0020class\u0020is\u0020constructed.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testFiltersInvalidProvidersFromArrayUponConstruction"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestThrowsExceptionIfRegisteringAProviderWhenOneWithNameAlreadyExists\u0028\u0029",
            "name": "testThrowsExceptionIfRegisteringAProviderWhenOneWithNameAlreadyExists",
            "summary": "Test\u0020that\u0020the\u0020service\u0020throws\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020if\u0020trying\u0020to\u0020register\na\u0020provider\u0020with\u0020a\u0020key\u0020that\u0020already\u0020exists.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testThrowsExceptionIfRegisteringAProviderWhenOneWithNameAlreadyExists"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestThrowsExceptionIfRemovingProviderThatDoesNotExist\u0028\u0029",
            "name": "testThrowsExceptionIfRemovingProviderThatDoesNotExist",
            "summary": "Test\u0020that\u0020the\u0020service\u0020throws\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020if\u0020you\u0020remove\na\u0020provider\u0020that\u0020does\u0020not\u0020exist.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testThrowsExceptionIfRemovingProviderThatDoesNotExist"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestThrowsExceptionIfCacheEnabledWithNoImplementation\u0028\u0029",
            "name": "testThrowsExceptionIfCacheEnabledWithNoImplementation",
            "summary": "Test\u0020that\u0020the\u0020service\u0020throws\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheImplementationNeededException\u007D\u0020if\u0020you\u0020want\u0020to\u0020cache\u0020timestamps\nbut\u0020don\u0027t\u0020provided\u0020an\u0020\u007B\u0040link\u0020\\Psr\\SimpleCache\\CacheInterface\u007D\u0020implementation.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testThrowsExceptionIfCacheEnabledWithNoImplementation"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestRegistersANewProvider\u0028\u0029",
            "name": "testRegistersANewProvider",
            "summary": "Test\u0020that\u0020we\u0020can\u0020add\u0020a\u0020provider\u0020to\u0020the\u0020service.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testRegistersANewProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestRemovesAProvider\u0028\u0029",
            "name": "testRemovesAProvider",
            "summary": "Test\u0020that\u0020we\u0020can\u0020remove\u0020a\u0020provider\u0020from\u0020the\u0020service.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testRemovesAProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampWithCacheDisabledAllProviders\u0028\u0029",
            "name": "testGetsTimestampWithCacheDisabledAllProviders",
            "summary": "Test\u0020the\u0020last\u0020modified\u0020service\u0020with\u0020the\u0020caching\u0020feature\u0020disabled\u0020when\u0020resolving\u0020all\nproviders.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampWithCacheDisabledAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestChecksCacheForTimestampAllProviders\u0028\u0029",
            "name": "testChecksCacheForTimestampAllProviders",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020timestamp\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testChecksCacheForTimestampAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestThrowsExceptionWhenCacheSaveFails\u0028\u0029",
            "name": "testThrowsExceptionWhenCacheSaveFails",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020timestamp\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testThrowsExceptionWhenCacheSaveFails"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampFromCacheIfPresentAllProviders\u0028\u0029",
            "name": "testGetsTimestampFromCacheIfPresentAllProviders",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent\u0020for\u0020all\u0020configured\u0020providers.\u0020This\u0020is\u0020mocking\u0020that\u0020it\u0020is\u0020cached\nat\u0020the\u0020\u0027all\u0027\u0020group\u0020level.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampFromCacheIfPresentAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampFromProviderIfCacheCheckFails\u0028\u0029",
            "name": "testGetsTimestampFromProviderIfCacheCheckFails",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020providers\u0020if\u0020caching\u0020is\u0020enabled,\nand\u0020there\u0020is\u0020a\u0020cache\u0020key\u0020but\u0020the\u0020actual\u0020call\u0020to\u0020resolve\u0020the\u0020value\u0020from\u0020cache\u0020fails\u0020\u0028i.e\n\u0020call\u0020to\u0020\u007B\u0040link\u0020\\Psr\\SimpleCache\\CacheInterface\u003A\u003Aget\u007D\u0020returns\u0020false\u0029.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampFromProviderIfCacheCheckFails"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampFromCacheIfPresentAllProvidersNoAllCache\u0028\u0029",
            "name": "testGetsTimestampFromCacheIfPresentAllProvidersNoAllCache",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent\u0020for\u0020all\u0020configured\u0020providers.\u0020This\u0020is\u0020to\u0020test\u0020with\u0020no\u0020cache\u0020entry\u0020at\nthe\u0020\u0027all\u0027\u0020group\u0020level,\u0020but\u0020a\u0020cached\u0020provider\u0020entry.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampFromCacheIfPresentAllProvidersNoAllCache"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestReturnsMostRecentTimestampFromAllProviders\u0028\u0029",
            "name": "testReturnsMostRecentTimestampFromAllProviders",
            "summary": "Test\u0020that\u0020the\u0020service\u0020gets\u0020the\u0020most\u0020recent\u0020timestamp\u0020from\u0020multiple\u0020providers.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testReturnsMostRecentTimestampFromAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestPreventsFutureTimestampsAllProviders\u0028\u0029",
            "name": "testPreventsFutureTimestampsAllProviders",
            "summary": "Test\u0020that\u0020the\u0020service\u0020prevents\u0020returning\u0020timestamps\u0020past\u0020the\u0020current\u0020time.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testPreventsFutureTimestampsAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestPreventsNegativeTimestampsAllProviders\u0028\u0029",
            "name": "testPreventsNegativeTimestampsAllProviders",
            "summary": "Test\u0020that\u0020the\u0020service\u0020prevents\u0020returning\u0020timestamps\u0020past\u0020the\u0020current\u0020time.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testPreventsNegativeTimestampsAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampWithCacheDisabledSingleProvider\u0028\u0029",
            "name": "testGetsTimestampWithCacheDisabledSingleProvider",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020resolves\u0020the\u0020timestamp\u0020with\u0020caching\u0020disabled.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampWithCacheDisabledSingleProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestChecksCacheForTimestampSingleProvider\u0028\u0029",
            "name": "testChecksCacheForTimestampSingleProvider",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020timestamp\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testChecksCacheForTimestampSingleProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampFromCacheIfPresentSingle\u0028\u0029",
            "name": "testGetsTimestampFromCacheIfPresentSingle",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampFromCacheIfPresentSingle"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestPreventsFutureTimestampsSingleProviders\u0028\u0029",
            "name": "testPreventsFutureTimestampsSingleProviders",
            "summary": "Test\u0020that\u0020the\u0020service\u0020prevents\u0020returning\u0020timestamps\u0020past\u0020the\u0020current\u0020time.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testPreventsFutureTimestampsSingleProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestPreventsNegativeTimestampsSingleProvider\u0028\u0029",
            "name": "testPreventsNegativeTimestampsSingleProvider",
            "summary": "Test\u0020that\u0020the\u0020service\u0020prevents\u0020returning\u0020timestamps\u0020past\u0020the\u0020current\u0020time.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testPreventsNegativeTimestampsSingleProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampWithCacheDisabledArray\u0028\u0029",
            "name": "testGetsTimestampWithCacheDisabledArray",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020resolves\u0020arrays\u0020of\u0020providers\u0020with\u0020the\u0020cache\u0020disabled.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampWithCacheDisabledArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestChecksCacheForTimestampArray\u0028\u0029",
            "name": "testChecksCacheForTimestampArray",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020timestamp\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so\u0020for\u0020an\u0020array\u0020of\u0020providers.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testChecksCacheForTimestampArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampFromCacheIfPresentArray\u0028\u0029",
            "name": "testGetsTimestampFromCacheIfPresentArray",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent\u0020for\u0020an\u0020array\u0020of\u0020providers.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampFromCacheIfPresentArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestGetsTimestampFromCacheIfPresentArrayGroupCached\u0028\u0029",
            "name": "testGetsTimestampFromCacheIfPresentArrayGroupCached",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent\u0020from\u0020an\u0020array\u0020of\u0020providers\u0020when\u0020the\u0020group\u0020of\u0020providers\u0020is\u0020cached.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testGetsTimestampFromCacheIfPresentArrayGroupCached"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestPreventsFutureTimestampsArray\u0028\u0029",
            "name": "testPreventsFutureTimestampsArray",
            "summary": "Test\u0020that\u0020the\u0020service\u0020prevents\u0020returning\u0020timestamps\u0020past\u0020the\u0020current\u0020time\u0020for\u0020an\u0020array\nof\u0020providers.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testPreventsFutureTimestampsArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestPreventsNegativeTimestampsArray\u0028\u0029",
            "name": "testPreventsNegativeTimestampsArray",
            "summary": "Test\u0020that\u0020the\u0020service\u0020prevents\u0020returning\u0020timestamps\u0020past\u0020the\u0020current\u0020time\u0020for\u0020an\u0020array\nof\u0020providers.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testPreventsNegativeTimestampsArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestThrowsExceptionWhenGettingTimestampForEmptyArray\u0028\u0029",
            "name": "testThrowsExceptionWhenGettingTimestampForEmptyArray",
            "summary": "Test\u0020that\u0020we\u0020properly\u0020handle\u0020empty\u0020arrays.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testThrowsExceptionWhenGettingTimestampForEmptyArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestThrowsExceptionWhenResolvingProviderThatDoesntExist\u0028\u0029",
            "name": "testThrowsExceptionWhenResolvingProviderThatDoesntExist",
            "summary": "Test\u0020handling\u0020an\u0020unregistered\u0020provider.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testThrowsExceptionWhenResolvingProviderThatDoesntExist"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestThrowsExceptionWhenResolvingProviderThatDoesntExistArray\u0028\u0029",
            "name": "testThrowsExceptionWhenResolvingProviderThatDoesntExistArray",
            "summary": "Test\u0020handling\u0020an\u0020unregistered\u0020provider.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testThrowsExceptionWhenResolvingProviderThatDoesntExistArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestTransformsCacheExceptionIntoCacheExceptionOnHas\u0028\u0029",
            "name": "testTransformsCacheExceptionIntoCacheExceptionOnHas",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020cache\u0020exception\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020check\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testTransformsCacheExceptionIntoCacheExceptionOnHas"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestTransformsThrowableIntoCacheExceptionOnHas\u0028\u0029",
            "name": "testTransformsThrowableIntoCacheExceptionOnHas",
            "summary": "Test\u0020it\u0020transforms\u0020a\u0020throwable\u0020caught\u0020when\u0020checking\u0020the\u0020cache\u0020into\u0020an\n\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testTransformsThrowableIntoCacheExceptionOnHas"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestTransformsCacheExceptionIntoCacheExceptionOnGet\u0028\u0029",
            "name": "testTransformsCacheExceptionIntoCacheExceptionOnGet",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020cache\u0020exception\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020get\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testTransformsCacheExceptionIntoCacheExceptionOnGet"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestTransformsThrowableIntoCacheExceptionOnGet\u0028\u0029",
            "name": "testTransformsThrowableIntoCacheExceptionOnGet",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020throwable\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020get\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testTransformsThrowableIntoCacheExceptionOnGet"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestTransformsCacheExceptionIntoCacheExceptionOnSave\u0028\u0029",
            "name": "testTransformsCacheExceptionIntoCacheExceptionOnSave",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020cache\u0020exception\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020save\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testTransformsCacheExceptionIntoCacheExceptionOnSave"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003AtestTransformsThrowableIntoCacheExceptionOnSave\u0028\u0029",
            "name": "testTransformsThrowableIntoCacheExceptionOnSave",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020throwable\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020save\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#method_testTransformsThrowableIntoCacheExceptionOnSave"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003A\u0024cacheTimestamp",
            "name": "cacheTimestamp",
            "summary": "Whether\u0020to\u0020cache\u0020timestamp.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#property_cacheTimestamp"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003A\u0024cacheTtl",
            "name": "cacheTtl",
            "summary": "Cache\u0020time\u002Dto\u002Dlive.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#property_cacheTtl"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003A\u0024cacheKey",
            "name": "cacheKey",
            "summary": "Cache\u0020key.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#property_cacheKey"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003A\u0024defaultTimestampFormat",
            "name": "defaultTimestampFormat",
            "summary": "Default\u0020timestamp\u0020format\u0020config\u0020option.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#property_defaultTimestampFormat"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\LastModifiedTest\u003A\u003A\u0024providers",
            "name": "providers",
            "summary": "Associative\u0020array\u0020of\u0020\u0027name\u0027\u0020\u003D\u003E\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\LastModified\\LastModifiedTimeProvider\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-LastModifiedTest.html#property_providers"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\MockCacheException",
            "name": "MockCacheException",
            "summary": "Class\u0020MockCacheException.",
            "url": "classes/Tests-Unit-Services-LastModified-MockCacheException.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProviderTest",
            "name": "CacheLastModifiedTimeProviderTest",
            "summary": "Class\u0020CacheLastModifiedProviderTest.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-CacheLastModifiedTimeProviderTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProviderTest\u003A\u003AsetUp\u0028\u0029",
            "name": "setUp",
            "summary": "Set\u0020up\u0020Carbon\u0020mock\u0020time.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-CacheLastModifiedTimeProviderTest.html#method_setUp"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProviderTest\u003A\u003AtestGetsTimestampFromCache\u0028\u0029",
            "name": "testGetsTimestampFromCache",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-CacheLastModifiedTimeProviderTest.html#method_testGetsTimestampFromCache"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProviderTest\u003A\u003AtestReturnsNegativeOneWithNoCacheEntry\u0028\u0029",
            "name": "testReturnsNegativeOneWithNoCacheEntry",
            "summary": "Test\u0020that\u0020if\u0020no\u0020cache\u0020entry\u0020is\u0020found,\u0020the\u0020provider\u0020will\u0020return\u0020\u002D1.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-CacheLastModifiedTimeProviderTest.html#method_testReturnsNegativeOneWithNoCacheEntry"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProviderTest\u003A\u003AtestReturnsNegativeOneWithExceptionOnHasCall\u0028\u0029",
            "name": "testReturnsNegativeOneWithExceptionOnHasCall",
            "summary": "Test\u0020that\u0020if\u0020the\u0020cache\u0020has\u0020method\u0020throws\u0020an\u0020exception,\u0020\u002D1\u0020will\u0020be\u0020returned.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-CacheLastModifiedTimeProviderTest.html#method_testReturnsNegativeOneWithExceptionOnHasCall"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\CacheLastModifiedTimeProviderTest\u003A\u003AtestReturnsNegativeOneWithExceptionOnGetCall\u0028\u0029",
            "name": "testReturnsNegativeOneWithExceptionOnGetCall",
            "summary": "Test\u0020that\u0020if\u0020the\u0020cache\u0020get\u0020method\u0020throws\u0020an\u0020exception,\u0020\u002D1\u0020will\u0020be\u0020returned.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-CacheLastModifiedTimeProviderTest.html#method_testReturnsNegativeOneWithExceptionOnGetCall"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\FilesystemLastModifiedProviderTest",
            "name": "FilesystemLastModifiedProviderTest",
            "summary": "Class\u0020FilesystemLastModifiedProviderTest.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-FilesystemLastModifiedProviderTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\FilesystemLastModifiedProviderTest\u003A\u003AsetUp\u0028\u0029",
            "name": "setUp",
            "summary": "Set\u0020up\u0020Carbon\u0020mock\u0020time.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-FilesystemLastModifiedProviderTest.html#method_setUp"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\FilesystemLastModifiedProviderTest\u003A\u003AtestThrowsInvalidArgumentExceptionForInvalidBasePath\u0028\u0029",
            "name": "testThrowsInvalidArgumentExceptionForInvalidBasePath",
            "summary": "Test\u0020that\u0020if\u0020provided\u0020an\u0020invalid\u0020base\u0020path\u0020\u0028i.e.\u0020non\u002Dexistent\u0020directory\u0029\u0020the\nclass\u0020will\u0020throw\u0020an\u0020\u007B\u0040link\u0020\\InvalidArgumentException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-FilesystemLastModifiedProviderTest.html#method_testThrowsInvalidArgumentExceptionForInvalidBasePath"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\FilesystemLastModifiedProviderTest\u003A\u003AtestThrowsInvalidArgumentExceptionForInvalidIncludedDIrectories\u0028\u0029",
            "name": "testThrowsInvalidArgumentExceptionForInvalidIncludedDIrectories",
            "summary": "Test\u0020that\u0020if\u0020provided\u0020an\u0020invalid\u0020included\u0020directory\u0020\u0028i.e.\u0020non\u002Dexistent\u0020directory\u0029\u0020the\nclass\u0020will\u0020throw\u0020an\u0020\u007B\u0040link\u0020\\InvalidArgumentException\u007D.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-FilesystemLastModifiedProviderTest.html#method_testThrowsInvalidArgumentExceptionForInvalidIncludedDIrectories"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\FilesystemLastModifiedProviderTest\u003A\u003AtestGetsTimestampFromFilesystem\u0028\u0029",
            "name": "testGetsTimestampFromFilesystem",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020timestamp\u0020from\u0020the\u0020filesystem\u0020if\u0020it\u0020is\npresent.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-FilesystemLastModifiedProviderTest.html#method_testGetsTimestampFromFilesystem"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\FilesystemLastModifiedProviderTest\u003A\u003AtestReturnsNegativeOneWithNoFiles\u0028\u0029",
            "name": "testReturnsNegativeOneWithNoFiles",
            "summary": "Test\u0020that\u0020if\u0020no\u0020files\u0020are\u0020found,\u0020the\u0020provider\u0020will\u0020return\u0020\u002D1.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-FilesystemLastModifiedProviderTest.html#method_testReturnsNegativeOneWithNoFiles"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers\\FilesystemLastModifiedProviderTest\u003A\u003AtestReturnsLastModifiedTimeWithNoRecursiveDirectories\u0028\u0029",
            "name": "testReturnsLastModifiedTimeWithNoRecursiveDirectories",
            "summary": "Test\u0020that\u0020if\u0020provided\u0020no\u0020directories\u0020to\u0020recurse\u0020through,\u0020it\u0020will\u0020still\u0020find\u0020the\u0020last\nmodified\u0020time\u0020in\u0020the\u0020base\u0020directory.",
            "url": "classes/Tests-Unit-Services-LastModified-Providers-FilesystemLastModifiedProviderTest.html#method_testReturnsLastModifiedTimeWithNoRecursiveDirectories"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest",
            "name": "PdoProviderTest",
            "summary": "Class\u0020PdoProviderTest.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusHandlesPDOExceptions\u0028\u0029",
            "name": "testGetStatusHandlesPDOExceptions",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020handle\u0020when\u0020the\u0020PDO\u0020instance\u0020throws\u0020an\u0020exception.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusHandlesPDOExceptions"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusHandlesStatementFailure\u0028\u0029",
            "name": "testGetStatusHandlesStatementFailure",
            "summary": "Test\u0020the\u0020the\u0020provider\u0020will\u0020handle\u0020when\u0020the\u0020PDO\u0020statement\u0020fails\u0020\u0028returns\u0020false\u0029.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusHandlesStatementFailure"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusHandlesStatementExecFailure\u0028\u0029",
            "name": "testGetStatusHandlesStatementExecFailure",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020handle\u0020when\u0020the\u0020statement\u0020execution\u0020fails\u0020\u0028returns\u0020false\u0029.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusHandlesStatementExecFailure"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusHandlesStatementExecPDOException\u0028\u0029",
            "name": "testGetStatusHandlesStatementExecPDOException",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020handles\u0020when\u0020execute\u0020throws\u0020a\u0020\u007B\u0040link\u0020\\PDOException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusHandlesStatementExecPDOException"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusHandlesStatementExecQueryStateError\u0028\u0029",
            "name": "testGetStatusHandlesStatementExecQueryStateError",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020handle\u0020when\u0020the\u0020query\u0020executed\u0020returns\u0020a\u0020error\u0020code.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusHandlesStatementExecQueryStateError"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusHandlesFetchPDOException\u0028\u0029",
            "name": "testGetStatusHandlesFetchPDOException",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020handles\u0020when\u0020fetch\u0020throws\u0020a\u0020\u007B\u0040link\u0020\\PDOException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusHandlesFetchPDOException"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusHandlesFetchEmptyQueryResult\u0028\u0029",
            "name": "testGetStatusHandlesFetchEmptyQueryResult",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020handles\u0020getting\u0020empty\u0020query\u0020results\u0020\u0028should\u0020not\u0020happen\u0020unless\u0020something\u0020weird\nis\u0020going\u0020on\u0029.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusHandlesFetchEmptyQueryResult"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PdoProviderTest\u003A\u003AtestGetStatusReturnsDatabaseStatus\u0028\u0029",
            "name": "testGetStatusReturnsDatabaseStatus",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020returns\u0020the\u0020database\u0020provider\u0020returns\u0020a\u0020status\u0020of\u0020OK\u0020if\u0020everything\nchecks\u0020out.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PdoProviderTest.html#method_testGetStatusReturnsDatabaseStatus"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PhpRedisProviderTest",
            "name": "PhpRedisProviderTest",
            "summary": "Class\u0020PhpRedisProviderTest.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PhpRedisProviderTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PhpRedisProviderTest\u003A\u003AtestProviderHandlesExceptionThrownFromPhpRedis\u0028\u0029",
            "name": "testProviderHandlesExceptionThrownFromPhpRedis",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020handle\u0020when\u0020the\u0020Redis\u0020client\u0020throws\u0020an\u0020exception.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PhpRedisProviderTest.html#method_testProviderHandlesExceptionThrownFromPhpRedis"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PhpRedisProviderTest\u003A\u003AtestProvidersReturnsErrorStatusIfPingNotSuccessful\u0028\u0029",
            "name": "testProvidersReturnsErrorStatusIfPingNotSuccessful",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020return\u0020an\u0020error\u0020status\u0020if\u0020it\u0020doesn\u0027t\u0020get\u0020a\u0020PONG\u0020from\u0020redis.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PhpRedisProviderTest.html#method_testProvidersReturnsErrorStatusIfPingNotSuccessful"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PhpRedisProviderTest\u003A\u003AtestProviderReturnsOkStatusOnSuccessfulPong\u0028\u0029",
            "name": "testProviderReturnsOkStatusOnSuccessfulPong",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020return\u0020an\u0020OK\u0020status\u0020when\u0020it\u0020gets\u0020a\u0020PONG\u0020from\u0020redis.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PhpRedisProviderTest.html#method_testProviderReturnsOkStatusOnSuccessfulPong"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PredisProviderTest",
            "name": "PredisProviderTest",
            "summary": "Class\u0020PredisProviderTest.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PredisProviderTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PredisProviderTest\u003A\u003AgetPredisMock\u0028\u0029",
            "name": "getPredisMock",
            "summary": "Get\u0020mocked\u0020Predis\u0020client\u0020class.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PredisProviderTest.html#method_getPredisMock"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PredisProviderTest\u003A\u003AtestProviderHandlesExceptionThrownFromPredis\u0028\u0029",
            "name": "testProviderHandlesExceptionThrownFromPredis",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020handle\u0020when\u0020Predis\u0020client\u0020throws\u0020an\u0020exception.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PredisProviderTest.html#method_testProviderHandlesExceptionThrownFromPredis"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PredisProviderTest\u003A\u003AtestProvidersReturnsErrorStatusIfPingNotSuccessful\u0028\u0029",
            "name": "testProvidersReturnsErrorStatusIfPingNotSuccessful",
            "summary": "Test\u0020that\u0020provider\u0020will\u0020return\u0020an\u0020error\u0020status\u0020if\u0020it\u0020gets\u0020not\u0020PONG\u0020from\u0020redis.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PredisProviderTest.html#method_testProvidersReturnsErrorStatusIfPingNotSuccessful"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\PredisProviderTest\u003A\u003AtestProviderReturnsOkStatusOnSuccessfulPong\u0028\u0029",
            "name": "testProviderReturnsOkStatusOnSuccessfulPong",
            "summary": "Test\u0020that\u0020provider\u0020will\u0020return\u0020an\u0020OK\u0020status\u0020when\u0020it\u0020gets\u0020a\u0020PONG\u0020back\u0020from\u0020redis.",
            "url": "classes/Tests-Unit-Services-Status-Providers-PredisProviderTest.html#method_testProviderReturnsOkStatusOnSuccessfulPong"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\MockPredisException",
            "name": "MockPredisException",
            "summary": "Class\u0020MockPredisException.",
            "url": "classes/Tests-Unit-Services-Status-Providers-MockPredisException.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\WebsiteProviderTest",
            "name": "WebsiteProviderTest",
            "summary": "Class\u0020WebsiteProviderTest.",
            "url": "classes/Tests-Unit-Services-Status-Providers-WebsiteProviderTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\WebsiteProviderTest\u003A\u003AtestThrowsInvalidArgumentExceptionInvalidUrl\u0028\u0029",
            "name": "testThrowsInvalidArgumentExceptionInvalidUrl",
            "summary": "Test\u0020that\u0020the\u0020provider\u0020will\u0020throw\u0020an\u0020\u007B\u0040link\u0020\\InvalidArgument\\Exception\u007D\u0020when\u0020constructed\nwith\u0020an\u0020invalid\u0020argument.",
            "url": "classes/Tests-Unit-Services-Status-Providers-WebsiteProviderTest.html#method_testThrowsInvalidArgumentExceptionInvalidUrl"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\WebsiteProviderTest\u003A\u003AtestProviderHandlesGuzzleException\u0028\u0029",
            "name": "testProviderHandlesGuzzleException",
            "summary": "Test\u0020that\u0020provider\u0020will\u0020handle\u0020exceptions\u0020thrown\u0020from\u0020the\u0020\u007B\u0040link\u0020\\Psr\\Http\\Client\\ClientInterface\u007D.",
            "url": "classes/Tests-Unit-Services-Status-Providers-WebsiteProviderTest.html#method_testProviderHandlesGuzzleException"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\WebsiteProviderTest\u003A\u003AtestProviderOnlyReturnsOkForStatusInTwoHundredRange\u0028\u0029",
            "name": "testProviderOnlyReturnsOkForStatusInTwoHundredRange",
            "summary": "Test\u0020that\u0020provider\u0020only\u0020returns\u0020an\u0020OK\u0020status\u0020when\u0020the\u0020response\u0020from\u0020PSR\u0020HTTP\u0020client\u0020is\na\u0020response\u0020with\u0020a\u0020status\u0020in\u0020the\u0020200\u0020range.",
            "url": "classes/Tests-Unit-Services-Status-Providers-WebsiteProviderTest.html#method_testProviderOnlyReturnsOkForStatusInTwoHundredRange"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\WebsiteProviderTest\u003A\u003AtestProviderReturnsErrorForStatusNotInTwoHundredRange\u0028\u0029",
            "name": "testProviderReturnsErrorForStatusNotInTwoHundredRange",
            "summary": "Test\u0020that\u0020provider\u0020returns\u0020error\u0020status\u0020for\u0020responses\u0020not\u0020in\u0020200\u0020range.",
            "url": "classes/Tests-Unit-Services-Status-Providers-WebsiteProviderTest.html#method_testProviderReturnsErrorForStatusNotInTwoHundredRange"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers\\MockClientException",
            "name": "MockClientException",
            "summary": "Class\u0020MockClientException.",
            "url": "classes/Tests-Unit-Services-Status-Providers-MockClientException.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest",
            "name": "StatusTest",
            "summary": "Class\u0020StatusTest.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AsetUp\u0028\u0029",
            "name": "setUp",
            "summary": "Set\u0020up\u0020StatusService\u0020test.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_setUp"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AgetConfig\u0028\u0029",
            "name": "getConfig",
            "summary": "Returns\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020instance.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_getConfig"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestReturnsProviders\u0028\u0029",
            "name": "testReturnsProviders",
            "summary": "Test\u0020that\u0020service\u0020can\u0020return\u0020a\u0020list\u0020of\u0020registered\u0020providers.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testReturnsProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestReturnsProviderNames\u0028\u0029",
            "name": "testReturnsProviderNames",
            "summary": "Test\u0020that\u0020service\u0020can\u0020return\u0020a\u0020list\u0020of\u0020registered\u0020provider\u0020names.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testReturnsProviderNames"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestFiltersInvalidProvidersFromArrayUponConstruction\u0028\u0029",
            "name": "testFiltersInvalidProvidersFromArrayUponConstruction",
            "summary": "Test\u0020that\u0020service\u0020properly\u0020filters\u0020out\u0020invalid\u0020provided\u0020when\u0020class\u0020is\u0020constructed.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testFiltersInvalidProvidersFromArrayUponConstruction"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestThrowsExceptionIfRegisteringAProviderWhenOneWithNameAlreadyExists\u0028\u0029",
            "name": "testThrowsExceptionIfRegisteringAProviderWhenOneWithNameAlreadyExists",
            "summary": "Test\u0020that\u0020the\u0020service\u0020throws\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020if\u0020trying\u0020to\u0020register\na\u0020provider\u0020with\u0020a\u0020key\u0020that\u0020already\u0020exists.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testThrowsExceptionIfRegisteringAProviderWhenOneWithNameAlreadyExists"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestThrowsExceptionIfRemovingProviderThatDoesNotExist\u0028\u0029",
            "name": "testThrowsExceptionIfRemovingProviderThatDoesNotExist",
            "summary": "Test\u0020that\u0020the\u0020service\u0020throws\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\ProviderRegistrationException\u007D\u0020if\u0020you\u0020remove\na\u0020provider\u0020that\u0020does\u0020not\u0020exist.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testThrowsExceptionIfRemovingProviderThatDoesNotExist"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestThrowsExceptionIfCacheEnabledWithNoImplementation\u0028\u0029",
            "name": "testThrowsExceptionIfCacheEnabledWithNoImplementation",
            "summary": "Test\u0020that\u0020the\u0020service\u0020throws\u0020an\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheImplementationNeededException\u007D\u0020if\u0020you\u0020want\u0020to\u0020cache\u0020statuses\nbut\u0020don\u0027t\u0020provided\u0020an\u0020\u007B\u0040link\u0020\\Psr\\SimpleCache\\CacheInterface\u007D\u0020implementation.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testThrowsExceptionIfCacheEnabledWithNoImplementation"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestRegistersANewProvider\u0028\u0029",
            "name": "testRegistersANewProvider",
            "summary": "Test\u0020that\u0020we\u0020can\u0020add\u0020a\u0020provider\u0020to\u0020the\u0020service.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testRegistersANewProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestRemovesAProvider\u0028\u0029",
            "name": "testRemovesAProvider",
            "summary": "Test\u0020that\u0020we\u0020can\u0020remove\u0020a\u0020provider\u0020from\u0020the\u0020service.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testRemovesAProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusWithCacheDisabledAllProviders\u0028\u0029",
            "name": "testGetsStatusWithCacheDisabledAllProviders",
            "summary": "Test\u0020the\u0020status\u0020service\u0020with\u0020the\u0020caching\u0020feature\u0020disabled\u0020when\u0020resolving\u0020all\nproviders.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusWithCacheDisabledAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestChecksCacheForStatusAllProviders\u0028\u0029",
            "name": "testChecksCacheForStatusAllProviders",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020status\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testChecksCacheForStatusAllProviders"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusFromProviderIfCacheCheckFails\u0028\u0029",
            "name": "testGetsStatusFromProviderIfCacheCheckFails",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020status\u0020from\u0020the\u0020providers\u0020if\u0020caching\u0020is\u0020enabled,\nand\u0020there\u0020is\u0020a\u0020cache\u0020key\u0020but\u0020the\u0020actual\u0020call\u0020to\u0020resolve\u0020the\u0020value\u0020from\u0020cache\u0020fails\u0020\u0028i.e\ncall\u0020to\u0020\u007B\u0040link\u0020\\Psr\\SimpleCache\\CacheInterface\u003A\u003Aget\u007D\u0020returns\u0020false\u0029.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusFromProviderIfCacheCheckFails"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestCheckCacheAssertsStringIsReturnedBeforeUnserialization\u0028\u0029",
            "name": "testCheckCacheAssertsStringIsReturnedBeforeUnserialization",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020make\u0020sure\u0020it\u0020gets\u0020a\u0020string\u0020back\u0020from\u0020the\u0020cache\u0020before\nattempting\u0020to\u0020unserialize\u0020it.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testCheckCacheAssertsStringIsReturnedBeforeUnserialization"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusFromCacheIfPresentAllProvidersNoAllCache\u0028\u0029",
            "name": "testGetsStatusFromCacheIfPresentAllProvidersNoAllCache",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020status\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent\u0020for\u0020all\u0020configured\u0020providers.\u0020This\u0020is\u0020to\u0020test\u0020with\u0020no\u0020cache\u0020entry\u0020at\nthe\u0020\u0027all\u0027\u0020group\u0020level,\u0020but\u0020a\u0020cached\u0020provider\u0020entry.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusFromCacheIfPresentAllProvidersNoAllCache"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusWithCacheDisabledSingleProvider\u0028\u0029",
            "name": "testGetsStatusWithCacheDisabledSingleProvider",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020resolves\u0020the\u0020status\u0020with\u0020caching\u0020disabled.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusWithCacheDisabledSingleProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestChecksCacheForStatusSingleProvider\u0028\u0029",
            "name": "testChecksCacheForStatusSingleProvider",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020status\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testChecksCacheForStatusSingleProvider"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusFromCacheIfPresentSingle\u0028\u0029",
            "name": "testGetsStatusFromCacheIfPresentSingle",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020status\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusFromCacheIfPresentSingle"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusWithCacheDisabledArray\u0028\u0029",
            "name": "testGetsStatusWithCacheDisabledArray",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020resolves\u0020arrays\u0020of\u0020providers\u0020with\u0020the\u0020cache\u0020disabled.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusWithCacheDisabledArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestChecksCacheForStatusArray\u0028\u0029",
            "name": "testChecksCacheForStatusArray",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020status\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so\u0020for\u0020an\u0020array\u0020of\u0020providers.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testChecksCacheForStatusArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusFromCacheIfPresentArray\u0028\u0029",
            "name": "testGetsStatusFromCacheIfPresentArray",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020status\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent\u0020for\u0020an\u0020array\u0020of\u0020providers.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusFromCacheIfPresentArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestGetsStatusFromCacheIfPresentArrayGroupCached\u0028\u0029",
            "name": "testGetsStatusFromCacheIfPresentArrayGroupCached",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020will\u0020get\u0020the\u0020status\u0020from\u0020the\u0020cache\u0020if\u0020it\u0020is\npresent\u0020from\u0020an\u0020array\u0020of\u0020providers\u0020when\u0020the\u0020group\u0020of\u0020providers\u0020is\u0020cached.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testGetsStatusFromCacheIfPresentArrayGroupCached"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestThrowsExceptionWhenCacheSaveFails\u0028\u0029",
            "name": "testThrowsExceptionWhenCacheSaveFails",
            "summary": "Assert\u0020that\u0020the\u0020service\u0020checks\u0020the\u0020cache\u0020for\u0020a\u0020status\u0020if\u0020the\u0020service\nis\u0020configured\u0020to\u0020do\u0020so.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testThrowsExceptionWhenCacheSaveFails"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestThrowsExceptionWhenGettingStatusForEmptyArray\u0028\u0029",
            "name": "testThrowsExceptionWhenGettingStatusForEmptyArray",
            "summary": "Test\u0020that\u0020we\u0020properly\u0020handle\u0020empty\u0020arrays.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testThrowsExceptionWhenGettingStatusForEmptyArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestThrowsExceptionWhenResolvingProviderThatDoesntExist\u0028\u0029",
            "name": "testThrowsExceptionWhenResolvingProviderThatDoesntExist",
            "summary": "Test\u0020handling\u0020an\u0020unregistered\u0020provider.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testThrowsExceptionWhenResolvingProviderThatDoesntExist"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestThrowsExceptionWhenResolvingProviderThatDoesntExistArray\u0028\u0029",
            "name": "testThrowsExceptionWhenResolvingProviderThatDoesntExistArray",
            "summary": "Test\u0020handling\u0020an\u0020unregistered\u0020provider.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testThrowsExceptionWhenResolvingProviderThatDoesntExistArray"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestTransformsCacheExceptionIntoCacheExceptionOnHas\u0028\u0029",
            "name": "testTransformsCacheExceptionIntoCacheExceptionOnHas",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020cache\u0020exception\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020check\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testTransformsCacheExceptionIntoCacheExceptionOnHas"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestTransformsThrowableIntoCacheExceptionOnHas\u0028\u0029",
            "name": "testTransformsThrowableIntoCacheExceptionOnHas",
            "summary": "Test\u0020it\u0020transforms\u0020a\u0020throwable\u0020caught\u0020when\u0020checking\u0020the\u0020cache\u0020into\u0020an\n\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testTransformsThrowableIntoCacheExceptionOnHas"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestTransformsCacheExceptionIntoCacheExceptionOnGet\u0028\u0029",
            "name": "testTransformsCacheExceptionIntoCacheExceptionOnGet",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020cache\u0020exception\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020get\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testTransformsCacheExceptionIntoCacheExceptionOnGet"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestTransformsThrowableIntoCacheExceptionOnGet\u0028\u0029",
            "name": "testTransformsThrowableIntoCacheExceptionOnGet",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020throwable\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020get\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testTransformsThrowableIntoCacheExceptionOnGet"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestTransformsCacheExceptionIntoCacheExceptionOnSave\u0028\u0029",
            "name": "testTransformsCacheExceptionIntoCacheExceptionOnSave",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020cache\u0020exception\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020save\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testTransformsCacheExceptionIntoCacheExceptionOnSave"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003AtestTransformsThrowableIntoCacheExceptionOnSave\u0028\u0029",
            "name": "testTransformsThrowableIntoCacheExceptionOnSave",
            "summary": "Test\u0020we\u0020handle\u0020any\u0020throwable\u0020from\u0020the\u0020PSR\u0020cache\u0020implementation\u0020on\u0020save\u0020and\u0020transform\u0020it\u0020into\nan\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\CacheException\u007D.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#method_testTransformsThrowableIntoCacheExceptionOnSave"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003A\u0024cacheStatuses",
            "name": "cacheStatuses",
            "summary": "Whether\u0020to\u0020cache\u0020statuses.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#property_cacheStatuses"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003A\u0024cacheTtl",
            "name": "cacheTtl",
            "summary": "Cache\u0020time\u002Dto\u002Dlive.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#property_cacheTtl"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003A\u0024cacheKey",
            "name": "cacheKey",
            "summary": "Cache\u0020key.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#property_cacheKey"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\StatusTest\u003A\u003A\u0024providers",
            "name": "providers",
            "summary": "Associative\u0020array\u0020of\u0020\u0027name\u0027\u0020\u003D\u003E\u0020\u007B\u0040link\u0020\\App\\Contracts\\Services\\Status\\StatusServiceProvider\u007D.",
            "url": "classes/Tests-Unit-Services-Status-StatusTest.html#property_providers"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\MockCacheException",
            "name": "MockCacheException",
            "summary": "Class\u0020MockCacheException.",
            "url": "classes/Tests-Unit-Services-Status-MockCacheException.html"
        },                {
            "fqsen": "\\",
            "name": "\\",
            "summary": "",
            "url": "namespaces/default.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services",
            "name": "Services",
            "summary": "",
            "url": "namespaces/app-contracts-services.html"
        },                {
            "fqsen": "\\App\\Contracts",
            "name": "Contracts",
            "summary": "",
            "url": "namespaces/app-contracts.html"
        },                {
            "fqsen": "\\App",
            "name": "App",
            "summary": "",
            "url": "namespaces/app.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\LastModified",
            "name": "LastModified",
            "summary": "",
            "url": "namespaces/app-contracts-services-lastmodified.html"
        },                {
            "fqsen": "\\App\\Contracts\\Services\\Status",
            "name": "Status",
            "summary": "",
            "url": "namespaces/app-contracts-services-status.html"
        },                {
            "fqsen": "\\App\\Services\\LastModified",
            "name": "LastModified",
            "summary": "",
            "url": "namespaces/app-services-lastmodified.html"
        },                {
            "fqsen": "\\App\\Services",
            "name": "Services",
            "summary": "",
            "url": "namespaces/app-services.html"
        },                {
            "fqsen": "\\App\\Services\\LastModified\\Providers",
            "name": "Providers",
            "summary": "",
            "url": "namespaces/app-services-lastmodified-providers.html"
        },                {
            "fqsen": "\\App\\Services\\Status\\Providers",
            "name": "Providers",
            "summary": "",
            "url": "namespaces/app-services-status-providers.html"
        },                {
            "fqsen": "\\App\\Services\\Status",
            "name": "Status",
            "summary": "",
            "url": "namespaces/app-services-status.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified",
            "name": "LastModified",
            "summary": "",
            "url": "namespaces/tests-unit-services-lastmodified.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services",
            "name": "Services",
            "summary": "",
            "url": "namespaces/tests-unit-services.html"
        },                {
            "fqsen": "\\Tests\\Unit",
            "name": "Unit",
            "summary": "",
            "url": "namespaces/tests-unit.html"
        },                {
            "fqsen": "\\Tests",
            "name": "Tests",
            "summary": "",
            "url": "namespaces/tests.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\LastModified\\Providers",
            "name": "Providers",
            "summary": "",
            "url": "namespaces/tests-unit-services-lastmodified-providers.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status\\Providers",
            "name": "Providers",
            "summary": "",
            "url": "namespaces/tests-unit-services-status-providers.html"
        },                {
            "fqsen": "\\Tests\\Unit\\Services\\Status",
            "name": "Status",
            "summary": "",
            "url": "namespaces/tests-unit-services-status.html"
        }            ]
);
